name: build, test, package

on:
  workflow_dispatch:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'
  
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_macos:
    name: 'macos'
    runs-on: macos-13
    timeout-minutes: 120
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.11.0
    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: 10G
        key: ${{ github.job }}-macos
        append-timestamp: false
        save: ${{ github.ref == 'refs/heads/main' && 'true' || 'false'}}
    - name: ccache
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
    - name: install system dependencies
      run: |
        bash tools/mac.install.brew.deps.sh
        pip install Jinja2==3.1.2
    - name: install gn
      run: |
        tar xf deps/gn/gn-mac-amd64.zip -C tools/
        export PATH=$PATH:$PWD/tools
    - name: setup modules
      run: |
        cp tools/mac.Setup.local deps/cpython/Modules/Setup.local
    - name: fetch v8 dependencies
      run: cd deps && bash ../tools/fetch.v8.deps.sh
    - name: build py
      run: zig build -Doptimize=ReleaseFast -Dpy=true -DCC="ccache cc"
    - name: build js
      run: |
        sed -i'orig' 's/"-Wl,-ObjC"//' deps/v8/build/config/mac/BUILD.gn
        sed -i'orig' 's/-Wno-maybe-uninitialized/-Wno-uninitialized/' deps/v8/build/config/compiler/BUILD.gn
        sed -i'orig' 's/-Wno-packed-not-aligned/-Wno-packed-non-pod/' deps/v8/build/config/compiler/BUILD.gn
        sed -i'orig' 's/-Wno-class-memaccess/-Wno-class-varargs/' deps/v8/build/config/compiler/BUILD.gn
        zig build -Doptimize=ReleaseFast -Djs=true
    - name: build mrt
      run: zig build -Doptimize=ReleaseSmall -Dmrt=true
    - name: run tests
      run: zig build test -Doptimize=ReleaseSmall
    - name: run integration tests
      run: zig build int-test -Dmrt=true -Doptimize=ReleaseSmall
    - name: tarball
      run: bash tools/build.tgz.sh

  build_linux:
    name: 'linux'
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.11.0
    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: 10G
        key: ${{ github.job }}-linux
        append-timestamp: false
        save: ${{ github.ref == 'refs/heads/main' && 'true' || 'false'}}
    - name: ccache
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
    - name: install system dependencies
      run: |
        bash tools/linux.install.deps.sh
    - name: setup modules
      run: |
        cp tools/linux.Setup.local deps/cpython/Modules/Setup.local
    - name: fetch v8 dependencies
      run: cd deps && bash ../tools/fetch.v8.deps.sh
    - name: build py
      run: zig build -Doptimize=ReleaseFast -Dpy=true -DCC="ccache gcc" 
    - name: build js
      run: |
        sudo apt install -y pkg-config libglib2.0-dev
        sed -i "s/\"-Wl,--disable-new-dtags\",//" deps/v8/build/config/gcc/BUILD.gn
        sed -i "s/\"atomic\"//" deps/v8/build/config/linux/BUILD.gn
        sed -i 's/-Wno-maybe-uninitialized/-Wno-uninitialized/' deps/v8/build/config/compiler/BUILD.gn
        sed -i 's/-Wno-packed-not-aligned/-Wno-packed-non-pod/' deps/v8/build/config/compiler/BUILD.gn
        sed -i 's/-Wno-class-memaccess/-Wno-class-varargs/' deps/v8/build/config/compiler/BUILD.gn
        zig build -Doptimize=ReleaseFast -Djs=true
    - name: build mrt
      run: zig build -Doptimize=ReleaseSmall -Dmrt=true
    - name: run tests
      run: zig build test -Doptimize=ReleaseSmall
    - name: run integration tests
      run: zig build int-test -Dmrt=true -Doptimize=ReleaseSmall
    - name: tarball
      run: |
        bash tools/build.tgz.sh