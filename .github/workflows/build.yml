name: build, test, package

on:
  workflow_dispatch:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'
  
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_macos:
    name: 'macos'
    runs-on: macos-13
    timeout-minutes: 120
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.11.0
    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: 10G
        key: ${{ runner.os }}
        append-timestamp: false
        save: ${{ github.ref == 'refs/heads/main' && 'true' || 'false'}}
    - name: ccache
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
    - name: install system dependencies
      run: |
        bash tools/mac.install.brew.deps.sh
    - name: build deps
      run: |
        zig build -Doptimize=ReleaseFast -Djs=true
        zig build -Doptimize=ReleaseFast -Dggml=true
    - name: build mrt
      run: zig build -Doptimize=ReleaseSmall
    - name: run tests
      run: zig build test -Doptimize=ReleaseSmall
    - name: run integration tests
      run: zig build int-test -Doptimize=ReleaseSmall
    - name: tarball
      run: bash tools/build.tgz.sh

  build_linux:
    name: 'linux'
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.11.0
    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: 10G
        key: ${{ runner.os }}
        append-timestamp: false
        save: ${{ github.ref == 'refs/heads/main' && 'true' || 'false'}}
    - name: ccache
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
    - name: build deps
      run: |
        zig build -Doptimize=ReleaseFast -Djs=true
        zig build -Doptimize=ReleaseFast -Dggml=true
    - name: build mrt
      run: zig build -Doptimize=ReleaseSmall
    - name: run tests
      run: zig build test -Doptimize=ReleaseSmall
    - name: run integration tests
      run: zig build int-test -Doptimize=ReleaseSmall
    - name: tarball
      run: |
        bash tools/build.tgz.sh